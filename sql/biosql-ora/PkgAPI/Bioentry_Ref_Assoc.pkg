--
-- API Package for Bioentry_Ref_Assoc.
--
-- Scaffold auto-generated by gen-api.pl (H.Lapp, 2002).
--
-- $Id: Bioentry_Ref_Assoc.pkg,v 1.1.1.2 2003-01-29 08:54:37 lapp Exp $
--

--
-- (c) Hilmar Lapp, hlapp at gnf.org, 2002.
-- (c) GNF, Genomics Institute of the Novartis Research Foundation, 2002.
--
-- You may distribute this module under the same terms as Perl.
-- Refer to the Perl Artistic License (see the license accompanying this
-- software package, or see http://www.perl.com/language/misc/Artistic.html)
-- for the terms under which you may use, modify, and redistribute this module.
-- 
-- THIS PACKAGE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-- WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-- MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
--

CREATE OR REPLACE
PACKAGE EntRefA IS

	CURSOR EntRefA_c (
		EntRefA_ENT_OID	IN SG_BIOENTRY_REF_ASSOC.ENT_OID%TYPE,
		EntRefA_REF_OID	IN SG_BIOENTRY_REF_ASSOC.REF_OID%TYPE,
		EntRefA_RANK	IN SG_BIOENTRY_REF_ASSOC.RANK%TYPE)
	RETURN SG_BIOENTRY_REF_ASSOC%ROWTYPE;

	FUNCTION get_oid(
		ENT_OID	IN SG_BIOENTRY_REF_ASSOC.ENT_OID%TYPE DEFAULT NULL,
		REF_OID	IN SG_BIOENTRY_REF_ASSOC.REF_OID%TYPE DEFAULT NULL,
		EntRefA_RANK	IN SG_BIOENTRY_REF_ASSOC.RANK%TYPE DEFAULT NULL,
		EntRefA_END_POS	IN SG_BIOENTRY_REF_ASSOC.END_POS%TYPE DEFAULT NULL,
		EntRefA_START_POS	IN SG_BIOENTRY_REF_ASSOC.START_POS%TYPE DEFAULT NULL,
		Ref_TITLE	IN SG_REFERENCE.TITLE%TYPE DEFAULT NULL,
		Ref_AUTHORS	IN SG_REFERENCE.AUTHORS%TYPE DEFAULT NULL,
		Ref_DOCUMENT_ID	IN SG_REFERENCE.DOCUMENT_ID%TYPE DEFAULT NULL,
		Ent_ACCESSION	IN SG_BIOENTRY.ACCESSION%TYPE DEFAULT NULL,
		Ent_VERSION	IN SG_BIOENTRY.VERSION%TYPE DEFAULT NULL,
		Ent_IDENTIFIER	IN SG_BIOENTRY.IDENTIFIER%TYPE DEFAULT NULL,
		DB_OID		IN SG_BIOENTRY.DB_OID%TYPE DEFAULT NULL,
		DB_NAME		IN SG_BIODATABASE.NAME%TYPE DEFAULT NULL,
		DB_ACRONYM	IN SG_BIODATABASE.ACRONYM%TYPE DEFAULT NULL,
		do_DML		IN NUMBER DEFAULT BSStd.DML_NO)
	RETURN INTEGER;

	FUNCTION do_insert(
		ENT_OID	IN SG_BIOENTRY_REF_ASSOC.ENT_OID%TYPE,
		REF_OID	IN SG_BIOENTRY_REF_ASSOC.REF_OID%TYPE,
		RANK	IN SG_BIOENTRY_REF_ASSOC.RANK%TYPE,
		END_POS	IN SG_BIOENTRY_REF_ASSOC.END_POS%TYPE,
		START_POS	IN SG_BIOENTRY_REF_ASSOC.START_POS%TYPE)
	RETURN INTEGER;

	PROCEDURE do_update(
		EntRefA_ENT_OID	IN SG_BIOENTRY_REF_ASSOC.ENT_OID%TYPE,
		EntRefA_REF_OID	IN SG_BIOENTRY_REF_ASSOC.REF_OID%TYPE,
		EntRefA_RANK	IN SG_BIOENTRY_REF_ASSOC.RANK%TYPE,
		EntRefA_END_POS	IN SG_BIOENTRY_REF_ASSOC.END_POS%TYPE,
		EntRefA_START_POS	IN SG_BIOENTRY_REF_ASSOC.START_POS%TYPE);

END EntRefA;
/

