--
-- API Package Body for Seqfeature_Source.
--
-- Scaffold auto-generated by gen-api.pl (H.Lapp, 2002).
--
-- $Id: Seqfeature_Source.pkb,v 1.1.1.1 2002-08-13 19:51:10 lapp Exp $
--

--
-- (c) Hilmar Lapp, hlapp at gnf.org, 2002.
-- (c) GNF, Genomics Institute of the Novartis Research Foundation, 2002.
--
-- You may distribute this module under the same terms as Perl.
-- Refer to the Perl Artistic License (see the license accompanying this
-- software package, or see http://www.perl.com/language/misc/Artistic.html)
-- for the terms under which you may use, modify, and redistribute this module.
-- 
-- THIS PACKAGE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-- WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-- MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
--

CREATE OR REPLACE
PACKAGE BODY FSrc IS

CURSOR FSrc_c (
		FSrc_NAME	IN SG_SEQFEATURE_SOURCE.NAME%TYPE)
RETURN SG_SEQFEATURE_SOURCE%ROWTYPE IS
	SELECT t.* FROM SG_SEQFEATURE_SOURCE t
	WHERE
		t.NAME = FSrc_NAME
	;

FUNCTION get_oid(
		FSrc_OID	IN SG_SEQFEATURE_SOURCE.OID%TYPE DEFAULT NULL,
		FSrc_NAME	IN SG_SEQFEATURE_SOURCE.NAME%TYPE,
		do_DML		IN NUMBER DEFAULT BSStd.DML_NO)
RETURN SG_SEQFEATURE_SOURCE.OID%TYPE
IS
	pk	SG_SEQFEATURE_SOURCE.OID%TYPE DEFAULT NULL;
	FSrc_row FSrc_c%ROWTYPE;
	--;
BEGIN
	-- initialize
	IF (do_DML > BSStd.DML_NO) THEN
		pk := FSrc_OID;
	END IF;
	-- look up
	IF pk IS NULL THEN
		FOR FSrc_row IN FSrc_c(FSrc_NAME) LOOP
		        pk := FSrc_row.OID;
		END LOOP;
	END IF;
	-- insert/update if requested
	IF (pk IS NULL) AND 
	   ((do_DML = BSStd.DML_I) OR (do_DML = BSStd.DML_UI)) THEN
	    	--
	    	-- insert the record and obtain the primary key
	    	pk := do_insert(
		        NAME => FSrc_NAME);
	ELSIF (do_DML = BSStd.DML_U) OR (do_DML = BSStd.DML_UI) THEN
	        -- update the record (note that not provided FKs will not
		-- be changed nor looked up)
		do_update(
			FSrc_OID	=> pk,
		        FSrc_NAME => FSrc_NAME);
	END IF;
	-- return the primary key
	RETURN pk;
END;

FUNCTION do_insert(
		NAME	IN SG_SEQFEATURE_SOURCE.NAME%TYPE)
RETURN SG_SEQFEATURE_SOURCE.OID%TYPE 
IS
	pk	SG_SEQFEATURE_SOURCE.OID%TYPE;
BEGIN
	-- pre-generate the primary key value
	SELECT SG_Sequence.nextval INTO pk FROM DUAL;
	-- insert the record
	INSERT INTO SG_SEQFEATURE_SOURCE (
		OID,
		NAME)
	VALUES (pk,
		NAME)
	;
	-- return the new pk value
	RETURN pk;
END;

PROCEDURE do_update(
		FSrc_OID	IN SG_SEQFEATURE_SOURCE.OID%TYPE,
		FSrc_NAME	IN SG_SEQFEATURE_SOURCE.NAME%TYPE)
IS
BEGIN
	-- update the record (and leave attributes passed as NULL untouched)
	UPDATE SG_SEQFEATURE_SOURCE
	SET
		NAME = NVL(FSrc_NAME, NAME)
	WHERE OID = FSrc_OID
	;
END;

END FSrc;
/

